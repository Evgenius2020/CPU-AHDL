HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	alu.tdf
	{
		alu [USE_LPM_FOR_AHDL_OPERATORS] [summator.inc]
		{
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,q1,q2,q3,q4,q5,q6,q7,a0,a1,a2,a3,a4,a5,a6,a7,b0,b1,b2,b3,b4,b5,b6,b7,cmd0,cmd1,cmd2];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,q1,q2,q3,q4,q5,q6,q7,a0,a1,a2,a3,a4,a5,a6,a7,b0,b1,b2,b3,b4,b5,b6,b7];
		}
	}
	altrom.tdf
	{
		altrom [DEVICE_FAMILY,REGISTERINPUTMODE=DEFAULT,FILE,NUMWORDS,AD_WIDTH,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,aglobal.inc]
		{
			9 [DEVICE_FAMILY=ACEX1K,REGISTERINPUTMODE=DEFAULT,FILE=commands.mif,NUMWORDS=256,AD_WIDTH=8,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0];
		}
	}
	lpm_rom.tdf
	{
		lpm_rom [DEVICE_FAMILY,LPM_FILE,LPM_OUTDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altrom.inc,aglobal.inc]
		{
			8 [DEVICE_FAMILY=ACEX1K,LPM_FILE=commands.mif,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_WIDTHAD=8,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q7,q6,q5,q4,q3,q2,q1,q0,address7,address6,address5,address4,address3,address2,address1,address0];
		}
	}
	memu.tdf
	{
		memu [USE_LPM_FOR_AHDL_OPERATORS] [lpm_rom.inc]
		{
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,result1,result2,result3,result4,result5,result6,result7,addr0,addr1,addr2,addr3,addr4,addr5,addr6,addr7,data0,data1,data2,data3,data4,data5,data6,data7,we];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,result1,result2,result3,result4,result5,result6,result7,addr0,addr1,addr2,addr3,addr4,addr5,addr6,addr7,we];
		}
	}
	ip.tdf
	{
		ip [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [addr0,addr1,addr2,addr3,addr4,addr5,addr6,addr7,newvalue0,newvalue1,newvalue2,newvalue3,newvalue4,newvalue5,newvalue6,newvalue7,we,clk];
		}
	}
	ir.tdf
	{
		ir [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [cmd0,cmd1,cmd2,arg0,arg1,arg2,arg3,arg4,in0,in1,in2,in3,in4,in5,in6,in7];
		}
	}
	acc.tdf
	{
		acc [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [out7,out6,out5,out4,out3,out2,out1,out0,e,in7,in6,in5,in4,in3,in2,in1,in0,clk];
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [e,in7,in6,in5,in4,in3,in2,in1,in0,clk];
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [clk];
		}
	}
	cu.tdf
	{
		cu [USE_LPM_FOR_AHDL_OPERATORS] [acc.inc,alu.inc,ip.inc,ir.inc,memu.inc]
		{
			0 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [];
		}
	}
}
TREE
{
	cu::(0,0):(0): cu.tdf
	{
		acc:3:(18,2):(52,acci): acc.tdf;
		ir:4:(19,2):(71,iri): ir.tdf;
		ip:5:(20,2):(88,ipi): ip.tdf;
		memu:7:(21,2):(107,memui): memu.tdf
		{
			lpm_rom:8:(11,2):(52,mem): lpm_rom.tdf
			{
				altrom:9:(63,3):(46,srom): altrom.tdf;
			}
		}
		alu:11:(22,2):(133,alui): alu.tdf;
	}
}
