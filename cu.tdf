include "acc.inc";
include "alu.inc";
include "ip.inc";
include "ir.inc";
include "memu.inc";

subdesign cu
(
	clk: input;
	acco[0..7]: output;
	memuo[0..7]: output;
	cmdo[0..2]: output;
	argo[0..4]: output;
)
variable
	cmd[0..2]: node;
	arg[0..4]: node;
	acci: acc;
	iri: ir;
	ipi: ip;
	memui: memu;
	alui: alu;
begin
	acci.clk = clk;
	acci.e = gnd;
	acci.in[] = (0, arg[]);

	ipi.clk = clk;
	ipi.we = gnd;
	ipi.newValue[] = (0, arg[]);

	iri.in[] =  memui.result[];
	arg[]= iri.arg[];
	cmd[] = iri.cmd[];
	
	memui.we = gnd;
	memui.addr[] = ipi.addr[];
	memui.data[] = (0, arg[]);
	memui.clk = clk;

	CASE cmd[] IS
		when 1 => --add
			alui.a[] = acci.out[];
			memui.addr[] = (0,arg[]);
			alui.b[] = memui.result[];
			alui.cmd[] = cmd[];
			acci.e = vcc;
			acci.in[] = alui.q[];
		when 2 => --sub
			alui.a[] = acci.out[];
			memui.addr[] = (0,arg[]);
			alui.b[] = memui.result[];
			alui.cmd[] = cmd[];
			acci.e = vcc;
			acci.in[] = alui.q[];
		when 3 => --load
			memui.addr[] = (0, arg[]);
			acci.e = vcc;
			acci.in[] = memui.result[];
		when 4 => --store
			memui.we = vcc;
			memui.addr[] = (0, arg[]);
			memui.data[] = acci.out[];
		when 5 => --set
			acci.e = vcc;
		WHEN 6 => --jmp
			ipi.we = vcc;
		when 7 => --jz
			IF (acci.out[] == 0) THEN
				ipi.we = vcc; 
			END IF;
	END CASE;
	

	acco[] = acci.out[];
	memuo[] = memui.result[];
	argo[] = arg[];
	cmdo[] = cmd;
end;
