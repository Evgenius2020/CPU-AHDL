include "acc.inc";
include "alu.inc";
include "ip.inc";
include "ir.inc";
include "ram.inc";

subdesign cu
(
	clk: input;
	acco[0..7]: output;
	ramo[0..7]: output;
	cmdo[0..2]: output;
	argo[0..4]: output;
)
variable
	cmd[0..2]: dff;
	arg[0..4]: dff;
	acci: acc;
	iri: ir;
	ipi: ip;
	rami: ram;
	alui: alu;
begin
	acci.clk = clk;
	acci.we = gnd;

	ipi.clk = clk;
	ipi.we = gnd;

	iri.in[] =  rami.out[];
	cmd[].clk = clk;
	arg[].clk = clk;
	arg[]= iri.arg[];
	cmd[] = iri.cmd[];

	rami.clk = clk;
	rami.we = gnd;

	CASE cmd[] IS
		when 1 => --add 
			alui.cmd[] = cmd[]; 
			alui.a[] = acci.out[];
			rami.addr[] = (0, arg[]);
			alui.b[] = rami.out[];
			acci.we = vcc;
			acci.in[] = alui.out[];
		when 2 => --sub
			alui.cmd[] = cmd[]; 
			alui.a[] = acci.out[];
			rami.addr[] = (0, arg[]);
			alui.b[] = rami.out[];
			acci.we = vcc;
			acci.in[] = alui.out[];
		when 3 => --load
			acci.we = vcc;
			rami.addr[] = (0, arg[]);
			acci.in[] = rami.out[];
		when 4 => --store
			rami.we = vcc;
			rami.addr[] = (0,arg[]);
			rami.data[] = acci.out[];
		when 5 => --set 
			acci.we = vcc;
			acci.in[] = (0, arg[]);
		when 6 => --jmp
			ipi.we = vcc;
			ipi.newValue[] = (0, arg[]);
		when 7=> --jz
			if (acci.out[] == 0) then
				ipi.we = vcc;
				ipi.newValue[] = (0, arg[]);
			end if;
	END CASE;
	

	acco[] = acci.out[];
	ramo[] = rami.out[];
	argo[] = arg[];
	cmdo[] = cmd[];
end;
